/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.2"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE"
    }
}

plugins {
  id "java"
  id "idea"
  id "com.palantir.docker" version "0.17.2"
  id "net.ltgt.errorprone" version "0.0.13"
}

apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "org.springframework.boot"

jar {
  baseName = "jv-server"
  version = "0.1.0-SNAPSHOT"
}

repositories {
  mavenCentral()
  jcenter()
  maven { url "https://jitpack.io" }
}

ext {
  javaVersion =  "1.8"
  versions = [
    assertj: [
        core: "3.8.0",
        guava: "3.1.0",
    ],
    errorprone: "2.1.3",
    gradle: "4.4",
    guava: "23.6-jre",
    jqwik: "0.7.3",
    junit: [
        platform: "1.0.2",
        jupiter: "5.0.2",
    ],
    spring: [
        boot: "1.5.9.RELEASE",
    ]
  ]
}

group = "net.cockamamy.jv"

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

junitPlatform {
    filters {
        includeClassNamePattern '.*Test'
        includeClassNamePattern '.*Tests'
        includeClassNamePattern '.*Properties'
    }
    enableStandardTestTask true
}

dependencies {
    compile "com.google.guava:guava:${versions.guava}"
    compile ("org.springframework.boot:spring-boot-starter-web:${versions.spring.boot}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-actuator:${versions.spring.boot}"
    compile "org.springframework.boot:spring-boot-starter-undertow:${versions.spring.boot}"

    errorprone "com.google.guava:guava:${versions.guava}"
    errorprone "com.google.errorprone:error_prone_core:${versions.errorprone}"

    testCompile "org.junit.platform:junit-platform-launcher:${versions.junit.platform}"
    testCompile "com.github.jlink:jqwik:${versions.jqwik}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${versions.junit.jupiter}"

    testCompile "org.assertj:assertj-core:${versions.assertj.core}"
    testCompile "org.assertj:assertj-guava:${versions.assertj.guava}"
    testCompile "com.google.guava:guava-testlib:${versions.guava}"
}

docker {
    dependsOn test, jar, bootRepackage
    name "${group}/${jar.baseName}"
    dockerfile file("Dockerfile")
    files jar.archivePath
    buildArgs([JAR_FILE: "${jar.archiveName}"])
}
