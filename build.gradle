/* Copyright 2018 John S. Burwell III
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.2"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE"
    }
}

plugins {
  id "java"
  id "idea"
  id "com.palantir.docker" version "0.17.2"
  id "net.ltgt.errorprone" version "0.0.13"
  id "net.minecrell.licenser" version "0.3"
}

apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "org.springframework.boot"

jar {
  baseName = "jv-server"
  version = "0.1.0-SNAPSHOT"
}

repositories {
  mavenCentral()
  jcenter()
  maven { url "https://jitpack.io" }
}

ext {
  javaVersion =  "1.8"
  versions = [
    assertj: [
        core: "3.8.0",
        guava: "3.1.0",
    ],
    errorprone: "2.1.3",
    gradle: "4.4",
    guava: "23.6-jre",
    jqwik: "0.7.3",
    junit: [
        platform: "1.0.2",
        jupiter: "5.0.2",
    ],
    spring: [
        boot: "1.5.9.RELEASE",
    ]
  ]
}

group = "net.cockamamy.jv"

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

license {
    header = project.file('HEADER.txt')
    include "**/*.java"
}

junitPlatform {
    filters {
        includeClassNamePattern '.*Test'
        includeClassNamePattern '.*Tests'
        includeClassNamePattern '.*Properties'
    }
    enableStandardTestTask true
}

dependencies {
    compile "com.google.guava:guava:${versions.guava}"
    compile ("org.springframework.boot:spring-boot-starter-web:${versions.spring.boot}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-actuator:${versions.spring.boot}"
    compile "org.springframework.boot:spring-boot-starter-undertow:${versions.spring.boot}"

    errorprone "com.google.guava:guava:${versions.guava}"
    errorprone "com.google.errorprone:error_prone_core:${versions.errorprone}"

    testCompile "org.junit.platform:junit-platform-launcher:${versions.junit.platform}"
    testCompile "com.github.jlink:jqwik:${versions.jqwik}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${versions.junit.jupiter}"

    testCompile "org.assertj:assertj-core:${versions.assertj.core}"
    testCompile "org.assertj:assertj-guava:${versions.assertj.guava}"
    testCompile "com.google.guava:guava-testlib:${versions.guava}"
}

docker {
    dependsOn test, jar, bootRepackage
    name "${group}/${jar.baseName}"
    dockerfile file("Dockerfile")
    files jar.archivePath
    buildArgs([JAR_FILE: "${jar.archiveName}"])
}
